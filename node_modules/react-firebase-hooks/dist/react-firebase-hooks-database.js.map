{"version":3,"file":"react-firebase-hooks-database.js","sources":["../node_modules/tslib/tslib.es6.js","../database/helpers/index.ts","../database/helpers/useListReducer.ts","../util/useLoadingValue.ts","../util/refHooks.ts","../database/useList.ts","../database/useObject.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import firebase from 'firebase/app';\n\nexport type ValOptions<T> = {\n  keyField?: string;\n  refField?: string;\n  transform?: (val: any) => T;\n};\n\nconst isObject = (val: any) =>\n  val != null && typeof val === 'object' && Array.isArray(val) === false;\n\nexport const snapshotToData = <T>(\n  snapshot: firebase.database.DataSnapshot,\n  keyField?: string,\n  refField?: string,\n  transform?: (val: any) => T\n) => {\n  if (!snapshot.exists) {\n    return undefined;\n  }\n\n  const val = snapshot.val();\n  if (isObject(val)) {\n    return {\n      ...(transform ? transform(val) : val),\n      ...(keyField ? { [keyField]: snapshot.key } : null),\n      ...(refField ? { [refField]: snapshot.ref } : null),\n    };\n  }\n  return transform ? transform(val) : val;\n};\n","import firebase from 'firebase/app';\nimport { useReducer } from 'react';\n\ntype KeyValueState = {\n  keys?: string[];\n  values?: firebase.database.DataSnapshot[];\n};\n\ntype ReducerState = {\n  error?: firebase.FirebaseError;\n  loading: boolean;\n  value: KeyValueState;\n};\n\ntype AddAction = {\n  type: 'add';\n  previousKey?: string | null;\n  snapshot: firebase.database.DataSnapshot | null;\n};\ntype ChangeAction = {\n  type: 'change';\n  snapshot: firebase.database.DataSnapshot | null;\n};\ntype EmptyAction = { type: 'empty' };\ntype ErrorAction = { type: 'error'; error: firebase.FirebaseError };\ntype MoveAction = {\n  type: 'move';\n  previousKey?: string | null;\n  snapshot: firebase.database.DataSnapshot | null;\n};\ntype RemoveAction = {\n  type: 'remove';\n  snapshot: firebase.database.DataSnapshot | null;\n};\ntype ResetAction = { type: 'reset' };\ntype ValueAction = { type: 'value'; snapshots: firebase.database.DataSnapshot[] | null };\ntype ReducerAction =\n  | AddAction\n  | ChangeAction\n  | EmptyAction\n  | ErrorAction\n  | MoveAction\n  | RemoveAction\n  | ResetAction\n  | ValueAction;\n\nconst initialState: ReducerState = {\n  loading: true,\n  value: {\n    keys: [],\n    values: [],\n  },\n};\n\nconst listReducer = (\n  state: ReducerState,\n  action: ReducerAction\n): ReducerState => {\n  switch (action.type) {\n    case 'add':\n      if (!action.snapshot) {\n        return state;\n      }\n      return {\n        ...state,\n        error: undefined,\n        value: addChild(state.value, action.snapshot, action.previousKey),\n      };\n    case 'change':\n      if (!action.snapshot) {\n        return state;\n      }\n      return {\n        ...state,\n        error: undefined,\n        value: changeChild(state.value, action.snapshot),\n      };\n    case 'error':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        value: {\n          keys: undefined,\n          values: undefined,\n        },\n      };\n    case 'move':\n      if (!action.snapshot) {\n        return state;\n      }\n      return {\n        ...state,\n        error: undefined,\n        value: moveChild(state.value, action.snapshot, action.previousKey),\n      };\n    case 'remove':\n      if (!action.snapshot) {\n        return state;\n      }\n      return {\n        ...state,\n        error: undefined,\n        value: removeChild(state.value, action.snapshot),\n      };\n    case 'reset':\n      return initialState;\n    case 'value':\n      return {\n        ...state,\n        error: undefined,\n        loading: false,\n        value: setValue(action.snapshots),\n      };\n    case 'empty':\n      return {\n        ...state,\n        loading: false,\n        value: {\n          keys: undefined,\n          values: undefined,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst setValue = (snapshots: firebase.database.DataSnapshot[] | null): KeyValueState => {\n  if (!snapshots) {\n    return {\n      keys: [],\n      values: [],\n    };\n  }\n\n  const keys: string[] = [];\n  const values: firebase.database.DataSnapshot[] = [];\n  snapshots.forEach((snapshot) => {\n    if (!snapshot.key) {\n      return;\n    }\n    keys.push(snapshot.key);\n    values.push(snapshot);\n  });\n\n  return {\n    keys,\n    values,\n  };\n};\n\nconst addChild = (\n  currentState: KeyValueState,\n  snapshot: firebase.database.DataSnapshot,\n  previousKey?: string | null\n): KeyValueState => {\n  if (!snapshot.key) {\n    return currentState;\n  }\n\n  const { keys, values } = currentState;\n  if (!previousKey) {\n    // The child has been added to the start of the list\n    return {\n      keys: keys ? [snapshot.key, ...keys] : [snapshot.key],\n      values: values ? [snapshot, ...values] : [snapshot],\n    };\n  }\n  // Establish the index for the previous child in the list\n  const index = keys ? keys.indexOf(previousKey) : 0;\n  // Insert the item after the previous child\n  return {\n    keys: keys\n      ? [...keys.slice(0, index + 1), snapshot.key, ...keys.slice(index + 1)]\n      : [snapshot.key],\n    values: values\n      ? [...values.slice(0, index + 1), snapshot, ...values.slice(index + 1)]\n      : [snapshot],\n  };\n};\n\nconst changeChild = (\n  currentState: KeyValueState,\n  snapshot: firebase.database.DataSnapshot\n): KeyValueState => {\n  if (!snapshot.key) {\n    return currentState;\n  }\n  const { keys, values } = currentState;\n  const index = keys ? keys.indexOf(snapshot.key) : 0;\n  return {\n    ...currentState,\n    values: values\n      ? [...values.slice(0, index), snapshot, ...values.slice(index + 1)]\n      : [snapshot],\n  };\n};\n\nconst removeChild = (\n  currentState: KeyValueState,\n  snapshot: firebase.database.DataSnapshot\n): KeyValueState => {\n  if (!snapshot.key) {\n    return currentState;\n  }\n\n  const { keys, values } = currentState;\n  const index = keys ? keys.indexOf(snapshot.key) : 0;\n  return {\n    keys: keys ? [...keys.slice(0, index), ...keys.slice(index + 1)] : [],\n    values: values\n      ? [...values.slice(0, index), ...values.slice(index + 1)]\n      : [],\n  };\n};\n\nconst moveChild = (\n  currentState: KeyValueState,\n  snapshot: firebase.database.DataSnapshot,\n  previousKey?: string | null\n): KeyValueState => {\n  // Remove the child from it's previous location\n  const tempValue = removeChild(currentState, snapshot);\n  // Add the child into it's new location\n  return addChild(tempValue, snapshot, previousKey);\n};\n\nexport default () => useReducer(listReducer, initialState);\n","import { useMemo, useReducer } from 'react';\n\nexport type LoadingValue<T, E> = {\n  error?: E;\n  loading: boolean;\n  reset: () => void;\n  setError: (error: E) => void;\n  setValue: (value?: T) => void;\n  value?: T;\n};\n\ntype ReducerState<E> = {\n  error?: E;\n  loading: boolean;\n  value?: any;\n};\n\ntype ErrorAction<E> = { type: 'error'; error: E };\ntype ResetAction = { type: 'reset'; defaultValue?: any };\ntype ValueAction = { type: 'value'; value: any };\ntype ReducerAction<E> = ErrorAction<E> | ResetAction | ValueAction;\n\nconst defaultState = (defaultValue?: any) => {\n  return {\n    loading: defaultValue === undefined || defaultValue === null,\n    value: defaultValue,\n  };\n};\n\nconst reducer = <E>() => (\n  state: ReducerState<E>,\n  action: ReducerAction<E>\n): ReducerState<E> => {\n  switch (action.type) {\n    case 'error':\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        value: undefined,\n      };\n    case 'reset':\n      return defaultState(action.defaultValue);\n    case 'value':\n      return {\n        ...state,\n        error: undefined,\n        loading: false,\n        value: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default <T, E>(getDefaultValue?: () => T): LoadingValue<T, E> => {\n  const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n  const [state, dispatch] = useReducer(\n    reducer<E>(),\n    defaultState(defaultValue)\n  );\n\n  const reset = () => {\n    const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n    dispatch({ type: 'reset', defaultValue });\n  };\n\n  const setError = (error: E) => {\n    dispatch({ type: 'error', error });\n  };\n\n  const setValue = (value?: T) => {\n    dispatch({ type: 'value', value });\n  };\n\n  return useMemo(\n    () => ({\n      error: state.error,\n      loading: state.loading,\n      reset,\n      setError,\n      setValue,\n      value: state.value,\n    }),\n    [state.error, state.loading, reset, setError, setValue, state.value]\n  );\n};\n","import { useEffect, useRef } from 'react';\n\ntype RefHook<T> = {\n  current: T;\n};\n\nexport const useComparatorRef = <T>(\n  value: T | null | undefined,\n  isEqual: (v1: T | null | undefined, v2: T | null | undefined) => boolean,\n  onChange?: () => void\n): RefHook<T | null | undefined> => {\n  const ref = useRef(value);\n  useEffect(() => {\n    if (!isEqual(value, ref.current)) {\n      ref.current = value;\n      if (onChange) {\n        onChange();\n      }\n    }\n  });\n  return ref;\n};\n\nexport interface HasIsEqual<T> {\n  isEqual: (value: T) => boolean;\n}\n\nconst isEqual = <T extends HasIsEqual<T>>(\n  v1: T | null | undefined,\n  v2: T | null | undefined\n): boolean => {\n  const bothNull: boolean = !v1 && !v2;\n  const equal: boolean = !!v1 && !!v2 && v1.isEqual(v2);\n  return bothNull || equal;\n};\n\nexport const useIsEqualRef = <T extends HasIsEqual<T>>(\n  value: T | null | undefined,\n  onChange?: () => void\n): RefHook<T | null | undefined> => {\n  return useComparatorRef(value, isEqual, onChange);\n};\n\nexport const useIdentifyRef = <T>(\n  value: T | null | undefined,\n  onChange?: () => void\n): RefHook<T | null | undefined> => {\n  return useComparatorRef(value, (v1, v2) => v1 === v2, onChange);\n};\n","import firebase from 'firebase/app';\nimport { useEffect, useMemo } from 'react';\nimport { snapshotToData, ValOptions } from './helpers';\nimport useListReducer from './helpers/useListReducer';\nimport { ListHook, ListKeysHook, ListValsHook, Val } from './types';\nimport { useIsEqualRef } from '../util';\n\nexport const useList = (query?: firebase.database.Query | null): ListHook => {\n  const [state, dispatch] = useListReducer();\n\n  const queryRef = useIsEqualRef(query, () => dispatch({ type: 'reset' }));\n  const ref: firebase.database.Query | null | undefined = queryRef.current;\n\n  useEffect(() => {\n    if (!ref) {\n      dispatch({ type: 'empty' });\n      return;\n    }\n\n    const onChildAdded = (\n      snapshot: firebase.database.DataSnapshot | null,\n      previousKey?: string | null\n    ) => {\n      dispatch({ type: 'add', previousKey, snapshot });\n    };\n\n    const onChildChanged = (\n      snapshot: firebase.database.DataSnapshot | null\n    ) => {\n      dispatch({ type: 'change', snapshot });\n    };\n\n    const onChildMoved = (\n      snapshot: firebase.database.DataSnapshot | null,\n      previousKey?: string | null\n    ) => {\n      dispatch({ type: 'move', previousKey, snapshot });\n    };\n\n    const onChildRemoved = (\n      snapshot: firebase.database.DataSnapshot | null\n    ) => {\n      dispatch({ type: 'remove', snapshot });\n    };\n\n    const onError = (error: firebase.FirebaseError) => {\n      dispatch({ type: 'error', error });\n    };\n\n    const onValue = (snapshots: firebase.database.DataSnapshot[] | null) => {\n      dispatch({ type: 'value', snapshots });\n    };\n\n    let childAddedHandler: ReturnType<typeof ref.on> | undefined;\n    const onInitialLoad = (snapshot: firebase.database.DataSnapshot) => {\n      const snapshotVal = snapshot.val();\n      let childrenToProcess = snapshotVal\n        ? Object.keys(snapshot.val()).length\n        : 0;\n\n      // If the list is empty then initialise the hook and use the default `onChildAdded` behaviour\n      if (childrenToProcess === 0) {\n        childAddedHandler = ref.on('child_added', onChildAdded, onError);\n        onValue([]);\n      } else {\n        // Otherwise, we load the first batch of children all to reduce re-renders\n        const children: firebase.database.DataSnapshot[] = [];\n\n        const onChildAddedWithoutInitialLoad = (\n          addedChild: firebase.database.DataSnapshot,\n          previousKey?: string | null\n        ) => {\n          if (childrenToProcess > 0) {\n            childrenToProcess--;\n            children.push(addedChild);\n\n            if (childrenToProcess === 0) {\n              onValue(children);\n            }\n\n            return;\n          }\n\n          onChildAdded(addedChild, previousKey);\n        };\n\n        childAddedHandler = ref.on(\n          'child_added',\n          onChildAddedWithoutInitialLoad,\n          onError\n        );\n      }\n    };\n\n    ref.once('value', onInitialLoad, onError);\n    const childChangedHandler = ref.on(\n      'child_changed',\n      onChildChanged,\n      onError\n    );\n    const childMovedHandler = ref.on('child_moved', onChildMoved, onError);\n    const childRemovedHandler = ref.on(\n      'child_removed',\n      onChildRemoved,\n      onError\n    );\n\n    return () => {\n      ref.off('child_added', childAddedHandler);\n      ref.off('child_changed', childChangedHandler);\n      ref.off('child_moved', childMovedHandler);\n      ref.off('child_removed', childRemovedHandler);\n    };\n  }, [dispatch, ref]);\n\n  const resArray: ListHook = [state.value.values, state.loading, state.error];\n  return useMemo(() => resArray, resArray);\n};\n\nexport const useListKeys = (\n  query?: firebase.database.Query | null\n): ListKeysHook => {\n  const [snapshots, loading, error] = useList(query);\n  const values = useMemo(\n    () =>\n      snapshots\n        ? snapshots.map((snapshot) => snapshot.key as string)\n        : undefined,\n    [snapshots]\n  );\n  const resArray: ListKeysHook = [values, loading, error];\n\n  return useMemo(() => resArray, resArray);\n};\n\nexport const useListVals = <\n  T,\n  KeyField extends string = '',\n  RefField extends string = ''\n>(\n  query?: firebase.database.Query | null,\n  options?: ValOptions<T>\n): ListValsHook<T, KeyField, RefField> => {\n  const keyField = options ? options.keyField : undefined;\n  const refField = options ? options.refField : undefined;\n  const transform = options ? options.transform : undefined;\n  const [snapshots, loading, error] = useList(query);\n  const values = useMemo(\n    () =>\n      (snapshots\n        ? snapshots.map((snapshot) =>\n            snapshotToData(snapshot, keyField, refField, transform)\n          )\n        : undefined) as Val<T, KeyField, RefField>[],\n    [snapshots, keyField, refField, transform]\n  );\n\n  const resArray: ListValsHook<T, KeyField, RefField> = [\n    values,\n    loading,\n    error,\n  ];\n  return useMemo(() => resArray, resArray);\n};\n","import firebase from 'firebase/app';\nimport { useEffect, useMemo } from 'react';\nimport { snapshotToData, ValOptions } from './helpers';\nimport { ObjectHook, ObjectValHook, Val } from './types';\nimport { useIsEqualRef, useLoadingValue } from '../util';\n\nexport const useObject = (\n  query?: firebase.database.Query | null\n): ObjectHook => {\n  const { error, loading, reset, setError, setValue, value } = useLoadingValue<\n    firebase.database.DataSnapshot,\n    firebase.FirebaseError\n  >();\n  const ref = useIsEqualRef(query, reset);\n\n  useEffect(() => {\n    const query = ref.current;\n    if (!query) {\n      setValue(undefined);\n      return;\n    }\n\n    query.on('value', setValue, setError);\n\n    return () => {\n      query.off('value', setValue);\n    };\n  }, [ref.current]);\n\n  const resArray: ObjectHook = [value, loading, error];\n  return useMemo(() => resArray, resArray);\n};\n\nexport const useObjectVal = <\n  T,\n  KeyField extends string = '',\n  RefField extends string = ''\n>(\n  query?: firebase.database.Query | null,\n  options?: ValOptions<T>\n): ObjectValHook<T, KeyField, RefField> => {\n  const keyField = options ? options.keyField : undefined;\n  const refField = options ? options.refField : undefined;\n  const transform = options ? options.transform : undefined;\n  const [snapshot, loading, error] = useObject(query);\n  const value = useMemo(\n    () =>\n      (snapshot\n        ? snapshotToData(snapshot, keyField, refField, transform)\n        : undefined) as Val<T, KeyField, RefField>,\n    [snapshot, keyField, refField, transform]\n  );\n\n  const resArray: ObjectValHook<T, KeyField, RefField> = [\n    value,\n    loading,\n    error,\n  ];\n  return useMemo(() => resArray, resArray);\n};\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","snapshotToData","snapshot","keyField","refField","transform","exists","val","Array","isArray","isObject","key","ref","initialState","loading","value","keys","values","listReducer","state","action","type","error","undefined","addChild","previousKey","changeChild","moveChild","removeChild","setValue","snapshots","forEach","push","currentState","index","indexOf","slice","tempValue","defaultState","defaultValue","getDefaultValue","_a","dispatch","reset","setError","useMemo","isEqual","v1","v2","bothNull","equal","useIsEqualRef","onChange","useRef","useEffect","current","useComparatorRef","useList","query","useReducer","childAddedHandler","onChildAdded","onError","onValue","once","childrenToProcess","on","children_1","addedChild","childChangedHandler","childMovedHandler","childRemovedHandler","off","resArray","useObject","map","options"],"mappings":"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"}