{"ast":null,"code":"var _jsxFileName = \"/Users/ananthkashyap/Documents/GitHub/launch.everaise/src/components/AdminRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext.js';\nimport { database } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [admin, setAdmin] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    database.users.doc(currentUser.email).get().then(doc => {\n      setAdmin(doc.data().admin);\n    }).then(() => {\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  });\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        return currentUser && admin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/landing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 71\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(AdminRoute, \"P61erFBKsonujmbExRf5bfua00M=\", false, function () {\n  return [useAuth];\n});\n\n_c = AdminRoute;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["/Users/ananthkashyap/Documents/GitHub/launch.everaise/src/components/AdminRoute.jsx"],"names":["React","useEffect","useState","Route","Redirect","useAuth","database","AdminRoute","component","Component","rest","currentUser","admin","setAdmin","loading","setLoading","FetchData","users","doc","email","get","then","data","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAApB,EAAuD;AAAA;;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAkBN,OAAO,EAA/B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACtBV,IAAAA,QAAQ,CAACW,KAAT,CAAeC,GAAf,CAAmBP,WAAW,CAACQ,KAA/B,EAAsCC,GAAtC,GAA4CC,IAA5C,CAAkDH,GAAD,IAAS;AACxDL,MAAAA,QAAQ,CAACK,GAAG,CAACI,IAAJ,GAAWV,KAAZ,CAAR;AACD,KAFD,EAEGS,IAFH,CAEQ,MAAM;AACVN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD;AAKD,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACV,GAFQ,CAAT;;AAIA,MAAI,CAACF,OAAL,EAAc;AACZ,wBACE,QAAC,KAAD,OACMJ,IADN;AAEE,MAAA,MAAM,EAAEa,KAAK,IAAI;AACf,eAASZ,WAAW,IAAIC,KAAhB,gBAAyB,QAAC,SAAD,OAAeW;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAzB,gBAAoD,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA5D;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASO,IAAIT,OAAJ,EAAa;AAClB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF;;GA/BuBP,U;UACEF,O;;;KADFE,U;AA+BvB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom' \nimport { useAuth } from '../contexts/AuthContext.js'\nimport { database } from '../firebase'\n\nexport default function AdminRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n  const [admin, setAdmin] = useState(true)\n  const [loading, setLoading] = useState(true)\n\n  const FetchData = () => {\n    database.users.doc(currentUser.email).get().then((doc) => {\n      setAdmin(doc.data().admin)\n    }).then(() => {\n        setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n    FetchData()\n  })\n\n  if (!loading) {\n    return (\n      <Route\n        {...rest}\n        render={props => {\n          return ((currentUser && admin) ? <Component {...props} /> : <Redirect to=\"/landing\" />)\n        }} \n      ></Route>\n    )\n  } else if (loading) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}